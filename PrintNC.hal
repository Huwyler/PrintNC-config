# Generated by PNCconf at Sat Nov  5 15:28:49 2022
# Using LinuxCNC version:  2.8
# If you make changes to this file, they will be
# overwritten when you run PNCconf again

loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadrt hostmot2
loadrt hm2_rpspi config=" num_encoders=0 num_pwmgens=1 num_stepgens=4" 
loadrt gantry personality=2

setp    hm2_7c81.0.pwmgen.pwm_frequency 20000
setp    hm2_7c81.0.pwmgen.pdm_frequency 6000000
setp    hm2_7c81.0.watchdog.timeout_ns 5000000
loadrt pid names=pid.y,pid.z,pid.s
loadrt mult2 names=mult2-jog-scale-x,mult2-jog-scale-y,mult2-jog-scale-z
loadrt ilowpass names=ilowpass-x-jog,ilowpass-y-jog,ilowpass-z-jog
loadrt mux2 names=mux2-jog-scale-x,mux2-jog-scale-y,mux2-jog-scale-z

addf hm2_7c81.0.read          servo-thread
addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf gantry.0.read 	      servo-thread
addf gantry.0.write           servo-thread

#addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread
addf hm2_7c81.0.write         servo-thread

addf ilowpass-x-jog servo-thread
addf ilowpass-y-jog servo-thread
addf ilowpass-z-jog servo-thread
addf mult2-jog-scale-x servo-thread
addf mult2-jog-scale-y servo-thread
addf mult2-jog-scale-z servo-thread
addf mux2-jog-scale-x servo-thread
addf mux2-jog-scale-y servo-thread
addf mux2-jog-scale-z servo-thread

net y-pos-cmd-for-gantry <= axis.y.pos-cmd
# external output signals

# external input signals

#*******************
#  AXIS X JOINT 0
#*******************

setp   ilowpass-x-jog.scale 1000
setp   ilowpass-x-jog.gain 0.01
setp   mux2-jog-scale-x.in0 0.001
setp   mux2-jog-scale-x.in1 0.002
net    jog.x.mux.out mux2-jog-scale-x.out mult2-jog-scale-x.in1
net    x-control-type mux2-jog-scale-x.sel

# Step Gen signals/setup

setp   hm2_7c81.0.stepgen.00.dirsetup        [JOINT_0]DIRSETUP
setp   hm2_7c81.0.stepgen.00.dirhold         [JOINT_0]DIRHOLD
setp   hm2_7c81.0.stepgen.00.steplen         [JOINT_0]STEPLEN
setp   hm2_7c81.0.stepgen.00.stepspace       [JOINT_0]STEPSPACE
setp   hm2_7c81.0.stepgen.00.position-scale  [JOINT_0]STEP_SCALE
setp   hm2_7c81.0.stepgen.00.step_type        0
setp   hm2_7c81.0.stepgen.00.control-type     0
setp   hm2_7c81.0.stepgen.00.maxaccel         [JOINT_0]STEPGEN_MAXACCEL
setp   hm2_7c81.0.stepgen.00.maxvel           [JOINT_0]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-pos-cmd    => hm2_7c81.0.stepgen.00.position-cmd
#net x-vel-cmd    <= joint.0.vel-cmd
#net x-vel-cmd    => hm2_7c81.0.stepgen.00.velocity-cmd
#net x-vel-fb     <= hm2_7c81.0.stepgen.00.velocity-fb
#net x-vel-fb     => joint.0.vel-fb
net x-pos-fb     <= hm2_7c81.0.stepgen.00.position-fb
net x-pos-fb     => joint.0.motor-pos-fb
net x-enable     <= joint.0.amp-enable-out
net x-enable     => hm2_7c81.0.stepgen.00.enable
net x-control-type => hm2_7c81.0.stepgen.00.control-type
#net x-control-type <= whb.axis.x.jog-vel-mode  later in the whb.hal!

# ---setup home / limit switch signals---

net x-home-sw     =>  joint.0.home-sw-in
net x-neg-limit     =>  joint.0.neg-lim-sw-in
net x-pos-limit     =>  joint.0.pos-lim-sw-in

net x-home-sw <= hm2_7c81.0.gpio.021.in
net y1-home-sw <= hm2_7c81.0.gpio.025.in
net y2-home-sw <= hm2_7c81.0.gpio.028.in

#*******************
#  GANTRY: Y->Y1,>2
#*******************

net combined-y-pos-cmd <= joint.1.motor-pos-cmd
net combined-y-pos-cmd => gantry.0.position-cmd

net combined-y-position-fb <= gantry.0.position-fb
net combined-y-position-fb => joint.1.motor-pos-fb

net combined-y-home-sw <= gantry.0.home
net combined-y-home-sw => joint.1.home-sw-in

net y1-pos-cmd <= gantry.0.joint.00.pos-cmd
net y2-pos-cmd <= gantry.0.joint.01.pos-cmd



net y1-pos-fb => gantry.0.joint.00.pos-fb
net y2-pos-fb => gantry.0.joint.01.pos-fb

net y1-home-sw => gantry.0.joint.00.home
net y2-home-sw => gantry.0.joint.01.home


setp gantry.0.search-vel [JOINT_1]HOME_SEARCH_VEL


#*******************
#  AXIS Y1 JOINT 1
#*******************
setp   ilowpass-y-jog.scale 1000
setp   ilowpass-y-jog.gain 0.01
setp   mux2-jog-scale-y.in0 0.001
setp   mux2-jog-scale-y.in1 0.002
net    jog.y.mux.out mux2-jog-scale-y.out mult2-jog-scale-y.in1
net    y-control-type mux2-jog-scale-y.sel


# Step Gen signals/setup

setp   hm2_7c81.0.stepgen.01.dirsetup        [JOINT_1]DIRSETUP
setp   hm2_7c81.0.stepgen.01.dirhold         [JOINT_1]DIRHOLD
setp   hm2_7c81.0.stepgen.01.steplen         [JOINT_1]STEPLEN
setp   hm2_7c81.0.stepgen.01.stepspace       [JOINT_1]STEPSPACE
setp   hm2_7c81.0.stepgen.01.position-scale  [JOINT_1]STEP_SCALE
setp   hm2_7c81.0.stepgen.01.step_type        0
setp   hm2_7c81.0.stepgen.01.control-type     0
setp   hm2_7c81.0.stepgen.01.maxaccel         [JOINT_1]STEPGEN_MAXACCEL
setp   hm2_7c81.0.stepgen.01.maxvel           [JOINT_1]STEPGEN_MAXVEL

# ---closedloop stepper signals---

#net y1-pos-cmd    <= joint.1.motor-pos-cmd  gantry inbetween!
net y1-pos-cmd    => hm2_7c81.0.stepgen.01.position-cmd
net y1-vel-cmd    => joint.1.vel-cmd
net y1-vel-fb     <= hm2_7c81.0.stepgen.01.velocity-fb
net y1-output     <= hm2_7c81.0.stepgen.01.velocity-cmd
net y1-pos-fb     <= hm2_7c81.0.stepgen.01.position-fb
#net y1-pos-fb     => joint.1.motor-pos-fb gantry inbetween!
net y1-enable     <= joint.1.amp-enable-out
net y1-enable     => hm2_7c81.0.stepgen.01.enable
net y1-control-type => hm2_7c81.0.stepgen.01.control-type

# ---setup home / limit switch signals---

#net y1-home-sw     =>  joint.1.home-sw-in  gantry inbetween!
#net y1-neg-limit     =>  joint.1.neg-lim-sw-in
#net y1-pos-limit     =>  joint.1.pos-lim-sw-in


#*******************
#  AXIS Y2 JOINT 2
#*******************
setp   ilowpass-z-jog.scale 1000
setp   ilowpass-z-jog.gain 0.01
setp   mux2-jog-scale-z.in0 0.001
setp   mux2-jog-scale-z.in1 0.002
net    jog.z.mux.out mux2-jog-scale-z.out mult2-jog-scale-z.in1
net    z-control-type mux2-jog-scale-z.sel


# Step Gen signals/setup

setp   hm2_7c81.0.stepgen.02.dirsetup        [JOINT_1]DIRSETUP
setp   hm2_7c81.0.stepgen.02.dirhold         [JOINT_1]DIRHOLD
setp   hm2_7c81.0.stepgen.02.steplen         [JOINT_1]STEPLEN
setp   hm2_7c81.0.stepgen.02.stepspace       [JOINT_1]STEPSPACE
setp   hm2_7c81.0.stepgen.02.position-scale  [JOINT_1]STEP_SCALE
setp   hm2_7c81.0.stepgen.02.step_type        0
setp   hm2_7c81.0.stepgen.02.control-type     0
setp   hm2_7c81.0.stepgen.02.maxaccel         [JOINT_1]STEPGEN_MAXACCEL
setp   hm2_7c81.0.stepgen.02.maxvel           [JOINT_1]STEPGEN_MAXVEL

# ---closedloop stepper signals---

#net y2-pos-cmd    <= joint.1.motor-pos-cmd
net y2-pos-cmd    => hm2_7c81.0.stepgen.02.position-cmd
#net y2-vel-cmd    <= joint.1.vel-cmd
net y1-output     => hm2_7c81.0.stepgen.02.velocity-cmd
net y2-vel-fb      <= hm2_7c81.0.stepgen.02.velocity-fb
net y2-pos-fb     <= hm2_7c81.0.stepgen.02.position-fb
#net y2-pos-fb     => joint.2.motor-pos-fb
#net y2-enable     <= joint.1.amp-enable-out
net y1-enable     => hm2_7c81.0.stepgen.02.enable
net y1-control-type => hm2_7c81.0.stepgen.02.control-type

# ---setup home / limit switch signals---

net y2-home-sw     =>  joint.2.home-sw-in
#net y2-neg-limit     =>  joint.2.neg-lim-sw-in
#net y2-pos-limit     =>  joint.2.pos-lim-sw-in


#*******************
#  AXIS Z JOINT 3
#*******************

setp   pid.z.Pgain     [JOINT_2]P
setp   pid.z.Igain     [JOINT_2]I
setp   pid.z.Dgain     [JOINT_2]D
setp   pid.z.bias      [JOINT_2]BIAS
setp   pid.z.FF0       [JOINT_2]FF0
setp   pid.z.FF1       [JOINT_2]FF1
setp   pid.z.FF2       [JOINT_2]FF2
setp   pid.z.deadband  [JOINT_2]DEADBAND
setp   pid.z.maxoutput [JOINT_2]MAX_OUTPUT
setp   pid.z.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
setp   pid.z.maxerror 0.012700

net z-index-enable  <=> pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-pos-fb        =>  pid.z.feedback
net z-output        <=  pid.z.output

# Step Gen signals/setup

#setp   hm2_7c81.0.stepgen.03.dirsetup        [JOINT_3]DIRSETUP
#setp   hm2_7c81.0.stepgen.03.dirhold         [JOINT_3]DIRHOLD
#setp   hm2_7c81.0.stepgen.03.steplen         [JOINT_3]STEPLEN
#setp   hm2_7c81.0.stepgen.03.stepspace       [JOINT_3]STEPSPACE
#setp   hm2_7c81.0.stepgen.03.position-scale  [JOINT_3]STEP_SCALE
#setp   hm2_7c81.0.stepgen.03.step_type        0
#setp   hm2_7c81.0.stepgen.03.control-type     1
#setp   hm2_7c81.0.stepgen.03.maxaccel         [JOINT_3]STEPGEN_MAXACCEL
#setp   hm2_7c81.0.stepgen.03.maxvel           [JOINT_3]STEPGEN_MAXVEL

# ---closedloop stepper signals---

#net z-pos-cmd    <= joint.3.motor-pos-cmd
#net z-vel-cmd    <= joint.3.vel-cmd
#net z-output     <= hm2_7c81.0.stepgen.03.velocity-cmd
#net z-pos-fb     <= hm2_7c81.0.stepgen.03.position-fb
#net z-pos-fb     => joint.3.motor-pos-fb
#net z-enable     <= joint.3.amp-enable-out
#net z-enable     => hm2_7c81.0.stepgen.03.enable

# ---setup home / limit switch signals---

#net z-home-sw     =>  joint.3.home-sw-in
#net z-neg-limit     =>  joint.3.neg-lim-sw-in
#net z-pos-limit     =>  joint.3.pos-lim-sw-in

#*******************
#  SPINDLE
#*******************

setp   pid.s.Pgain     [SPINDLE_0]P
setp   pid.s.Igain     [SPINDLE_0]I
setp   pid.s.Dgain     [SPINDLE_0]D
setp   pid.s.bias      [SPINDLE_0]BIAS
setp   pid.s.FF0       [SPINDLE_0]FF0
setp   pid.s.FF1       [SPINDLE_0]FF1
setp   pid.s.FF2       [SPINDLE_0]FF2
setp   pid.s.deadband  [SPINDLE_0]DEADBAND
setp   pid.s.maxoutput [SPINDLE_0]MAX_OUTPUT
setp   pid.s.error-previous-target true

net spindle-index-enable  <=> pid.s.index-enable
net spindle-enable        =>  pid.s.enable
net spindle-vel-cmd-rpm     => pid.s.command
net spindle-vel-fb-rpm      => pid.s.feedback
net spindle-output        <=  pid.s.output

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  spindle.0.speed-out-rps
net spindle-vel-cmd-rps-abs    <=  spindle.0.speed-out-rps-abs
net spindle-vel-cmd-rpm        <=  spindle.0.speed-out
net spindle-vel-cmd-rpm-abs    <=  spindle.0.speed-out-abs
net spindle-enable             <=  spindle.0.on
net spindle-cw                 <=  spindle.0.forward
net spindle-ccw                <=  spindle.0.reverse
net spindle-brake              <=  spindle.0.brake
net spindle-revs               =>  spindle.0.revs
net spindle-at-speed           =>  spindle.0.at-speed
net spindle-vel-fb-rps         =>  spindle.0.speed-in
net spindle-index-enable      <=>  spindle.0.index-enable

# ---Setup spindle at speed signals---

sets spindle-at-speed true


#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

#net axis-select-x  halui.axis.x.select
net jog-x-pos      halui.axis.x.plus
net jog-x-neg      halui.axis.x.minus
net jog-x-analog   halui.axis.x.analog
net x-is-homed     halui.joint.0.is-homed
#net axis-select-y  halui.axis.y.select
net jog-y-pos      halui.axis.y.plus
net jog-y-neg      halui.axis.y.minus
net jog-y-analog   halui.axis.y.analog
net y-is-homed     halui.joint.1.is-homed
#net axis-select-z  halui.axis.z.select
net jog-z-pos      halui.axis.z.plus
net jog-z-neg      halui.axis.z.minus
net jog-z-analog   halui.axis.z.analog
net z-is-homed     halui.joint.2.is-homed
net jog-selected-pos      halui.axis.selected.plus
net jog-selected-neg      halui.axis.selected.minus
net spindle-manual-cw     halui.spindle.0.forward
net spindle-manual-ccw    halui.spindle.0.reverse
net spindle-manual-stop   halui.spindle.0.stop
#net machine-is-on         halui.machine.is-on
net jog-speed             halui.axis.jog-speed
net MDI-mode              halui.mode.is-mdi

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist
net coolant-flood     <=  iocontrol.0.coolant-flood

#  ---probe signal---

net probe-in     =>  motion.probe-input

#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled

#  ---digital in / out signals---

#  ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out
net estop-out     =>  iocontrol.0.emc-enable-in

#  ---manual tool change signals---

loadusr -W hal_manualtoolchange
net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared

